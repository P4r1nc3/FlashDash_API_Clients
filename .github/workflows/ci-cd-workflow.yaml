name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  build:
    name: Build All Modules
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java and Maven
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Build all modules
        run: mvn clean verify

  lint-openapi:
    name: Lint OpenAPI Specs
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install OpenAPI CLI
        run: npm install -g @redocly/cli

      - name: Validate FlashDash Core API OpenAPI Spec
        run: redocly lint flashdash-core-api/flashdash-core-api.yaml --config .redocly.yaml

  format-check:
    name: Check YAML Formatting with Prettier
    runs-on: ubuntu-latest
    needs: lint-openapi
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Prettier
        run: npm install -g prettier

      - name: Check YAML formatting
        run: prettier --check "**/*.yaml"

  check-flashdash-core-changes:
    name: Check FlashDash Core API Changes
    runs-on: ubuntu-latest
    needs: format-check
    if: github.event_name == 'push' && success()
    outputs:
      changed: ${{ steps.detect_changes.outputs.flashdash_core_changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Detect changes in FlashDash Core API
        id: detect_changes
        run: |
          flashdash_core_changed="false"
          if git diff --name-only HEAD^ HEAD | grep -q 'flashdash-core-api.yaml'; then
            flashdash_core_changed="true"
          fi
          echo "flashdash_core_changed=$flashdash_core_changed" >> $GITHUB_ENV
          echo "::set-output name=flashdash_core_changed::$flashdash_core_changed"

  check-flashdash-activity-changes:
    name: Check FlashDash Activity API Changes
    runs-on: ubuntu-latest
    needs: format-check
    if: github.event_name == 'push' && success()
    outputs:
      changed: ${{ steps.detect_changes.outputs.flashdash_activity_changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Detect changes in FlashDash Activity API
        id: detect_changes
        run: |
          flashdash_activity_changed="false"
          if git diff --name-only HEAD^ HEAD | grep -q 'flashdash-activity-api.yaml'; then
            flashdash_activity_changed="true"
          fi
          echo "flashdash_activity_changed=$flashdash_activity_changed" >> $GITHUB_ENV
          echo "::set-output name=flashdash_activity_changed::$flashdash_activity_changed"

  deploy-flashdash-core-api:
    name: Deploy FlashDash Core API
    runs-on: ubuntu-latest
    needs: check-flashdash-core-changes
    if: needs.check-flashdash-core-changes.outputs.changed == 'true' && success()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java and Maven
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Set up GitHub Packages authentication
        run: |
          mkdir -p ~/.m2
          echo "<settings>
          <servers>
            <server>
              <id>github</id>
              <username>${{ secrets.USER_GITHUB }}</username>
              <password>${{ secrets.TOKEN_GITHUB }}</password>
            </server>
          </servers>
          </settings>" > ~/.m2/settings.xml

      - name: Increment version for FlashDash Core API
        run: |
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -pl flashdash-core-api -q -DforceStdout)
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          NEW_VERSION="$major.$minor.$((patch + 1))"
          mvn versions:set -DnewVersion=$NEW_VERSION -DgenerateBackupPoms=false -pl flashdash-core-api
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit updated version
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          git fetch origin master
          git checkout master

          git stash
          git pull --rebase origin master
          git stash pop || echo "No changes to apply"

          git add flashdash-core-api/pom.xml
          git commit -m "Bump FlashDash API client version to $NEW_VERSION"
          git push origin master

      - name: Deploy FlashDash Core API
        run: mvn clean deploy -pl flashdash-core-api
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}

  deploy-flashdash-activity-api:
    name: Deploy FlashDash Activity API
    runs-on: ubuntu-latest
    needs: check-flashdash-activity-changes
    if: needs.check-flashdash-activity-changes.outputs.changed == 'true' && success()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java and Maven
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Set up GitHub Packages authentication
        run: |
          mkdir -p ~/.m2
          echo "<settings>
          <servers>
            <server>
              <id>github</id>
              <username>${{ secrets.USER_GITHUB }}</username>
              <password>${{ secrets.TOKEN_GITHUB }}</password>
            </server>
          </servers>
          </settings>" > ~/.m2/settings.xml

      - name: Increment version for FlashDash Activity API
        run: |
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -pl flashdash-activity-api -q -DforceStdout)
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          NEW_VERSION="$major.$minor.$((patch + 1))"
          mvn versions:set -DnewVersion=$NEW_VERSION -DgenerateBackupPoms=false -pl flashdash-activity-api
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit updated version
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          git fetch origin master
          git checkout master

          git stash
          git pull --rebase origin master
          git stash pop || echo "No changes to apply"

          git add flashdash-core-api/pom.xml
          git commit -m "Bump FlashDash Activity API client version to $NEW_VERSION"
          git push origin master

      - name: Deploy FlashDash Activity API
        run: mvn clean deploy -pl flashdash-activity-api
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
